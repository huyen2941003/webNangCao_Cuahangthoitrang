@model Baocao_chuyende.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Phân loại/</span> Sửa phân loại</h4>

    <!-- Basic Layout & Basic with Icons -->
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <!-- Basic Layout -->
            <div class="col-xxl">
                <div class="card mb-4">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <h5 class="mb-0">Sửa phân loại</h5>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.id)
                        <form>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.nameProduct)</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.nameProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.nameProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.idCategory)</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.idCategory, (IEnumerable<SelectListItem>)ViewBag.CategoryList, htmlAttributes: new { @class = "form-control", @id = "idCategoryDropdown" })
                                    @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.idBrands)</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.idBrands, (IEnumerable<SelectListItem>)ViewBag.BrandsList, htmlAttributes: new { @class = "form-control", @id = "idBrandsDropdown" })
                                    @Html.ValidationMessageFor(model => model.idBrands, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.idType)</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.idType, (IEnumerable<SelectListItem>)ViewBag.TypeList, htmlAttributes: new { @class = "form-control", @id = "idTypeDropdown" })
                                    @Html.ValidationMessageFor(model => model.idType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.cost)</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control", @id = "basic-default-name", @placeholder = "Nhập giá nhập", @type = "number", @step = "any" } })
                                    @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.price)</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @id = "basic-default-name", @placeholder = "Nhập giá bán", @type = "number", @step = "any" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.inventory)</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.inventory, new { htmlAttributes = new { @class = "form-control", @id = "basic-default-name", @placeholder = "Nhập hàng tồn" } })
                                    @Html.ValidationMessageFor(model => model.inventory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label class="col-sm-2 col-form-label" for="basic-default-name">@Html.LabelFor(model => model.description)</label>
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(model => model.description, new { @class = "form-control", @id = "basic-default-name", @placeholder = "Nhập mô tả", rows = 4 })
                                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row justify-content-end">
                                <div class="col-sm-10">
                                    <button type="submit" class="btn btn-primary">Sửa</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="buy-now">
    <a href="@Url.Action("Product", "Product")" class="btn btn-danger btn-buy-now">Quay lại</a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
    $('#idCategoryDropdown').change(function () {
        var categoryId = $(this).val();

        $.ajax({
            url: '@Url.Action("GetTypesByCategory", "Product")',
            type: 'GET',
            dataType: 'json',
            data: { categoryId: categoryId },
            success: function (data) {
                var typesDropdown = $('#idTypeDropdown');
                typesDropdown.empty();
                $.each(data, function (index, item) {
                    typesDropdown.append($('<option></option>').val(item.value).text(item.text));
                });
            },
            error: function () {
                alert('An error occurred while fetching the list of product types.');
            }
        });
    });
});
</script>